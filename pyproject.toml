[project]
name = "mcp-filesystem"
version = "0.2.0" # Updated version
description = "A local filesystem interface for Claude via the Model Context Protocol."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
  { name = "Daniel Kirschner", email = "dan@sudosynthesis.dev" }
]
dependencies = [
  "mcp[cli] >=1.2.0",
  "pydantic >=2.0",
  "pathspec >=0.11", # Used in FSContext for .gitignore style patterns
  "aiofiles >=23.0",  # Moved to core for async file I/O
  "PyMuPDF >=1.23.0", # For PDF reading functionality
]

[project.optional-dependencies]
# PDF support is now a core dependency
magic = ["python-magic >=0.4"] # For advanced MIME type detection
test = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.20.0",
  "pytest-cov>=3.0.0",
  "pytest-mock>=3.10.0",
  "coverage>=6.0.0",
  "pytest-aiohttp>=1.0.0",
  "pytest-xdist>=2.5.0",
  "pytest-timeout>=2.1.0",
  "black",
  "mypy",
  "ruff",
  "types-aiofiles",
  "pip-audit>=2.9.0",
  "bandit>=1.8.3"
]
all = ["pypdf", "python-magic"] # Updated: 'pillow' removed, 'aiofiles' is now core

[project.scripts]
filesystem-server-start = "filesystem.server.main:main_cli"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=xml"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\\.pyi?$'

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "def __repr__", "raise ImportError", "raise NotImplementedError"]

[tool.ruff]
# Exclude directories
exclude = [
  ".git",
  "__pycache__",
  ".pytest_cache",
  ".mypy_cache",
  ".tox",
  "build",
  "dist",
  "*.egg-info"
]
line-length = 130
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-sort-within-sections = true

[tool.uv]
